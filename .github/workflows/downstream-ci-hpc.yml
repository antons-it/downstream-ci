name: downstream ci hpc

on:
  workflow_call:
    inputs:
      eccodes:
        required: false
        type: string
      eckit:
        required: false
        type: string
      metkit:
        required: false
        type: string
      metkit_sha:
        required: false
        type: string
      atlas:
        required: false
        type: string

jobs:
  # eccodes:
  #   name: eccodes
  #   if: ${{ inputs.eccodes }}
  #   uses: ecmwf-enterprise-sandbox/eccodes/.github/workflows/reusable-ci-hpc.yml@upstream-ci-hpc
  #   secrets: inherit

  # eckit:
  #   name: eckit
  #   if: ${{ inputs.eckit }}
  #   uses: ecmwf-enterprise-sandbox/eckit/.github/workflows/reusable-ci-hpc.yml@upstream-ci-hpc
  #   with:
  #     eckit: ${{ inputs.eckit }}
  #   secrets: inherit

  metkit:
    # needs eccodes and eckit to complete first, always() ensures that it will run regardless of whether they were successfull and at least one job in needs was successful, or the inputs.metkit is populated
    # needs: [eccodes, eckit]
    if: ${{ always() && (contains(join(needs.*.result, ','), 'success') || inputs.metkit) }}
    name: metkit
    uses: ecmwf/metkit/.github/workflows/reusable-ci-hpc.yml@${{ inputs.metkit_sha }}
    with:
      metkit: ${{ inputs.metkit }}
      eckit: ${{ inputs.eckit }}
      eccodes: ${{ inputs.eccodes }}
    secrets: inherit

  # atlas:
  #   needs: [eckit]
  #   if: ${{ always() && (contains(join(needs.*.result, ','), 'success') || inputs.atlas) }}
  #   name: atlas
  #   uses: ecmwf-enterprise-sandbox/atlas/.github/workflows/reusable-ci-hpc.yml@upstream-ci-hpc
  #   with:
  #     atlas: ${{ inputs.atlas }}
  #     eckit: ${{ inputs.eckit }}
  #   secrets: inherit
